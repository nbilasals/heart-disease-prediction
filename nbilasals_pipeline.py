# -*- coding: utf-8 -*-
"""nbilasals-pipeline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QERnmVYSFXE4ahkmSK6i7Hc60dWv0rSR
"""

!pip install tfx

!pip install keras

#Import Library
import os
import sys

# Add the path to the 'modules' directory
sys.path.append('/content/a443-cc-pipeline/')

from tfx.orchestration.beam.beam_dag_runner import BeamDagRunner
from modules.local_pipeline import init_local_pipeline
from modules.components import init_components

PIPELINE_NAME = 'nbilasals-pipeline'
# pipeline inputs
DATA_ROOT = "/content/a443-cc-pipeline/data"
TRANSFORM_MODULE_FILE = '/content/a443-cc-pipeline/modules/transform.py'
TRAINER_MODULE_FILE = '/content/a443-cc-pipeline/modules/trainer.py'

OUTPUT_BASE = '/content/a443-cc-pipeline/output/'
serving_model_dir = os.path.join(OUTPUT_BASE, 'serving_model')
pipeline_root = os.path.join(OUTPUT_BASE, PIPELINE_NAME)
metadata_path = os.path.join(pipeline_root, 'metadata.sqlite')

components = init_components(
    data_dir=DATA_ROOT,
    transform_module=TRANSFORM_MODULE_FILE,
    training_module=TRAINER_MODULE_FILE,
    training_steps=5000,
    eval_steps=1000,
    serving_model_dir=serving_model_dir
)

pipeline = init_local_pipeline(components, pipeline_root)
BeamDagRunner().run(pipeline)

# prompt: upload from computer

from google.colab import files
uploaded = files.upload()

# prompt: unzip it

import zipfile
import os

# Assuming the uploaded file is a zip file and named 'pipeline.zip'
# Replace 'pipeline.zip' with the actual filename if different.
with zipfile.ZipFile('a443-cc-pipeline.zip', 'r') as zip_ref:
    zip_ref.extractall('/content/')

# Verify that the files are unzipped.
# Replace 'a443-cc-pipeline' with the expected top-level directory name from your zip file if different.
print(os.listdir('/content/a443-cc-pipeline'))

# prompt: download zip /content/a443-cc-pipeline

import zipfile
import os

def zip_directory(directory_path, zip_filename):
  """Zips a directory and its contents.

  Args:
    directory_path: The path to the directory to zip.
    zip_filename: The name of the zip file to create.
  """

  try:
    with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
      for root, _, files in os.walk(directory_path):
        for file in files:
          file_path = os.path.join(root, file)
          zipf.write(file_path, arcname=os.path.relpath(file_path, directory_path))
    print(f"Successfully created '{zip_filename}'")

  except FileNotFoundError:
    print(f"Error: Directory '{directory_path}' not found.")
  except Exception as e:
    print(f"An error occurred: {e}")


zip_directory('/content/a443-cc-pipeline', 'a443-cc-pipeline.zip')

from google.colab import files
files.download('a443-cc-pipeline.zip')